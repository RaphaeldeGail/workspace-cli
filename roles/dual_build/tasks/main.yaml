---
- name: create the HCP Terraform project
  raphaeldegail.hcp_terraform.hcp_terraform_project:
    name: '{{ workspaces_folder_name }}'
    description: 'Initial project for the root structure.'
    organization_name: '{{ hcp_tf_organization_name }}'
  register: hcp_project

- name: create the root project if does not already exists
  google.cloud.gcp_resourcemanager_project:
    name: '{{ root_project.base_name }}'
    labels: '{{ root_project.labels }}'
    parent:
      type: organization
      id: '{{ organization_id }}'
    id: '{{ root_project.base_name }}-{{ 999999 | random(start=1) }}'
  register: created_project
  when: "hash_list == []"

- name: set the definitive project ID
  ansible.builtin.set_fact:
    project_id: '{{ hash_list[0].projectId if ( hash_list != [] ) else created_project.projectId }}'

- name: update the billing account linked to the project
  raphaeldegail.googlecloudy.gcp_billing_association:
    billing_account_id: '{{ gcp_billing_account_id }}'
    project_id: '{{ project_id }}'

- name: enable services for the project
  google.cloud.gcp_serviceusage_service:
    name: '{{ item }}'
    project: '{{ project_id }}'
  with_items:
    - 'cloudapis.googleapis.com'
    - 'cloudbilling.googleapis.com'
    - 'cloudidentity.googleapis.com'
    - 'cloudkms.googleapis.com'
    - 'cloudresourcemanager.googleapis.com'
    - 'iam.googleapis.com'
    - 'serviceusage.googleapis.com'
    - 'storage.googleapis.com'
    - 'sts.googleapis.com'
    - 'billingbudgets.googleapis.com'
    - 'dns.googleapis.com'

- name: set the project IAM policy
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam:
    bindings:
      - role: roles/owner
        members: ['group:{{ executive_group_email }}']
    policy_version: '{{ policy_version }}'
    project_id: '{{ project_id }}'

- name: create the workload identity pool for the dual structure
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: 'dual-identities'
    display_name: 'Dual Identities'
    description: 'This workload identity pool contains identity providers that are able to work for dual architecture.'
    project_id: '{{ project_id }}'
  register: organization_pool

- name: create the identity provider for the workload identity pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: 'hcp-tf-oidc-provider'
    display_name: 'HCP Terraform OIDC Provider'
    description: 'This provider will authorize users from the HCP Terraform organization to identify on the Google Cloud organization.'
    attribute_mapping:
      attribute.aud: 'assertion.aud'
      attribute.terraform_full_workspace: 'assertion.terraform_full_workspace'
      attribute.terraform_organization_id: 'assertion.terraform_organization_id'
      attribute.terraform_organization_name: 'assertion.terraform_organization_name'
      attribute.terraform_project_id: 'assertion.terraform_project_id'
      attribute.terraform_project_name: 'assertion.terraform_project_name'
      attribute.terraform_run_id: 'assertion.terraform_run_id'
      attribute.terraform_run_phase: 'assertion.terraform_run_phase'
      attribute.terraform_workspace_id: 'assertion.terraform_workspace_id'
      attribute.terraform_workspace_name: 'assertion.terraform_workspace_name'
      google.subject: 'assertion.sub'
    attribute_condition: 'assertion.sub.startsWith("organization:{{ hcp_tf_organization_name }}")'
    oidc:
      issuer_uri: 'https://app.terraform.io'
      allowed_audiences:
        - 'https://tfc.{{ gcp_organization_domain }}'
    pool_name: '{{ organization_pool.name }}'
  register: organization_provider

- name: create the "builder" service account
  raphaeldegail.googlecloudy.gcp_iam_service_account:
    name: '{{ builder_account_name }}'
    display_name: 'Workspace Builder'
    project_id: '{{ project_id }}'
  register: service_account

- name: set the IAM policy for the service account
  raphaeldegail.googlecloudy.gcp_iam_service_account_iam:
    policy_version: '{{ policy_version }}'
    bindings:
      - role: roles/iam.serviceAccountTokenCreator
        members: ['group:{{ executive_group_email }}']
      - role: roles/iam.workloadIdentityUser
        members: ['principalSet://iam.googleapis.com/{{ organization_pool.name }}/attribute.terraform_project_id/{{ hcp_project.id }}']
    service_account_id: '{{ service_account.email }}'
    project_id: '{{ project_id }}'

- name: create the "workspace" tag key
  raphaeldegail.googlecloudy.gcp_resourcemanager_tagkey:
    parent: 'organizations/{{ organization_id }}'
    short_name: '{{ workspaces_tag_name }}'
    description: 'The Name of the workspace.'
  register: tag_key

- name: set the IAM policy for the "workspace" tag
  raphaeldegail.googlecloudy.gcp_resourcemanager_tagkey_iam:
    policy_version: '{{ policy_version }}'
    bindings:
      - role: roles/resourcemanager.tagAdmin
        members: ['serviceAccount:{{ service_account.email }}']
      - role: roles/resourcemanager.tagUser
        members: ['serviceAccount:{{ service_account.email }}']
    tagkey_id: '{{ (tag_key.name | split("/"))[-1] }}'

- name: create the "workspace" folder
  raphaeldegail.googlecloudy.gcp_resourcemanager_folder:
    parent: 'organizations/{{ organization_id }}'
    display_name: '{{ workspaces_folder_name }}'
  register: folder
  tags:
   - folder

- name: set the IAM policy for the "workspace" folder
  raphaeldegail.googlecloudy.gcp_resourcemanager_folder_iam:
    policy_version: '{{ policy_version }}'
    bindings:
      - role: roles/resourcemanager.folderAdmin
        members: ['group:{{ executive_group_email }}']
      - role: 'organizations/{{ organization_id }}/roles/{{ builder_role.name }}'
        members: ['serviceAccount:{{ service_account.email }}']
    folder_id: '{{ (folder.name | split("/"))[-1] }}'
  tags:
    - folder

- name: create the "building" variable set
  raphaeldegail.hcp_terraform.hcp_terraform_varset:
    name: '{{ building_variable_set_name }}'
    description: 'A set of variables needed to build a new workspace.'
    projects:
      - '{{ hcp_project.id }}'
    organization_name: '{{ hcp_tf_organization_name }}'
  register: cred_varset

- name: create the "root_project" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'root_project'
    value: '{{ project_id }}'
    description: 'The ID of the root project for the organization. Used to create workspaces.'
    category: 'terraform'
    sensitive: true
    varset_id: '{{ cred_varset.id }}'

- name: create the "TFE_TOKEN" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TFE_TOKEN'
    value: '{{ bearer_token }}'
    description: 'The HCP Terraform organization token.'
    category: 'env'
    sensitive: true
    varset_id: '{{ cred_varset.id }}'
  no_log: True

- name: create the "workspaces_tag_key" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'workspaces_tag_key'
    value: '{{ ( tag_key.name | split("/") )[-1] }}'
    description: 'The ID of "workspace" tag key.'
    category: 'terraform'
    varset_id: '{{ cred_varset.id }}'

- name: create the "billing_group" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'billing_group'
    value: '{{ billing_group_email }}'
    description: 'The name of the group with billing usage authorization.'
    category: 'terraform'
    varset_id: '{{ cred_varset.id }}'

- name: create the "organization_identity_pool" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'organization_identity_pool'
    value: '{{ organization_pool.name }}'
    description: 'The qualified name of the workload identity pool for the Google organization.'
    category: 'terraform'
    varset_id: '{{ cred_varset.id }}'

- name: create the "workspaces_folder" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'workspaces_folder'
    value: '{{ ( folder.name | split("/") )[-1] }}'
    description: 'The ID of the "Workspaces" folder that contains all subsequent workspaces.'
    category: 'terraform'
    varset_id: '{{ cred_varset.id }}'

- name: create the "organization" variable set
  raphaeldegail.hcp_terraform.hcp_terraform_varset:
    name: '{{ organization_variable_set_name }}'
    description: 'A set of general variables at the organization scope.'
    global_set: true
    organization_name: '{{ hcp_tf_organization_name }}'
  register: org_varset

- name: create the "TF_VAR_billing_account" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TF_VAR_billing_account'
    value: '{{ gcp_billing_account_id }}'
    description: 'The ID of the Google billing account associated with all the workspaces resources.'
    category: 'env'
    varset_id: '{{ org_varset.id }}'

- name: create the "TF_VAR_domain_name" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TF_VAR_domain_name'
    value: '{{ gcp_organization_domain }}'
    description: 'The domain name of the Google organization hosting the workspaces.'
    category: 'env'
    varset_id: '{{ org_varset.id }}'

- name: create the "TF_VAR_organization_id" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TF_VAR_organization_id'
    value: '{{ organization_id }}'
    description: 'The ID of the Google organization hosting the workspaces.'
    category: 'env'
    varset_id: '{{ org_varset.id }}'

- name: create the "TF_VAR_hcp_tf_organization" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TF_VAR_hcp_tf_organization'
    value: '{{ hcp_tf_organization_name }}'
    description: 'The name of the Terraform Cloud organization hosting the workspaces.'
    category: 'env'
    varset_id: '{{ org_varset.id }}'

- name: create the "TF_VAR_region" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TF_VAR_region'
    value: '{{ gcp_region }}'
    description: 'The default geographical region for the workspaces resources.'
    category: 'env'
    varset_id: '{{ org_varset.id }}'

- name: create the "TF_VAR_directory_customer_id" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TF_VAR_directory_customer_id'
    value: '{{ directory_customer_id }}'
    description: 'The ID of the Google Cloud Identity directory.'
    category: 'env'
    varset_id: '{{ org_varset.id }}'

- name: create the "authentication" variable set
  raphaeldegail.hcp_terraform.hcp_terraform_varset:
    name: '{{ authentication_variable_set_name }}'
    description: 'A set of all the environment variables needed to authenticate to the Google Cloud organization with Terraform Cloud as a workload identity provider.'
    global_set: true
    organization_name: '{{ hcp_tf_organization_name }}'
  register: auth_varset

- name: create the "TFC_GCP_PROVIDER_AUTH" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TFC_GCP_PROVIDER_AUTH'
    value: 'true'
    description: 'Must be present and set to true, or Terraform Cloud will not attempt to use dynamic credentials to authenticate to GCP.'
    category: 'env'
    varset_id: '{{ auth_varset.id }}'

- name: create the "TFC_GCP_WORKLOAD_PROVIDER_NAME" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TFC_GCP_WORKLOAD_PROVIDER_NAME'
    value: '{{ organization_provider.name }}'
    description: 'The canonical name of the workload identity provider. This must be in the form mentioned for the name attribute.'
    category: 'env'
    varset_id: '{{ auth_varset.id }}'

- name: create the "TFC_GCP_WORKLOAD_IDENTITY_AUDIENCE" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TFC_GCP_WORKLOAD_IDENTITY_AUDIENCE'
    value: '{{ organization_provider.oidc["allowedAudiences"][0] }}'
    description: 'Will be used as the aud claim for the identity token.'
    sensitive: true
    category: 'env'
    varset_id: '{{ auth_varset.id }}'

- name: create the "TFC_GCP_RUN_SERVICE_ACCOUNT_EMAIL" variable
  raphaeldegail.hcp_terraform.hcp_terraform_var:
    key: 'TFC_GCP_RUN_SERVICE_ACCOUNT_EMAIL'
    value: '{{ service_account.email }}'
    description: 'The service account email HCP Terraform will use when authenticating to GCP.'
    sensitive: true
    category: 'env'
    varset_id: '{{ auth_varset.id }}'
